import React from "react";
import { render, screen } from "test/utils";
import { mockMultiAssetPortfolio } from "__mocks__/models/mockYieldXPortfolio";
import { Direction2 } from "providers/graphql/hooks";
import { OrderListContainer } from "../OrderListContainer";

const mockOrdersToRaise = [
  {
    assetId: "bond",
    direction: Direction2.Buy,
    comment: "Generated by YieldX",
    quantity: 997,
    spotPrice: 45.26,
    priceLimit: 46.1652,
    fullFillRequired: false,
    goodTillCancel: true,
    metadata: { yield: 4.44 }
  },
  {
    assetId: "fund",
    direction: Direction2.Buy,
    comment: "Generated by YieldX",
    quantity: 11410,
    spotPrice: 23.66,
    priceLimit: 24.133200000000002,
    fullFillRequired: false,
    goodTillCancel: true,
    metadata: { yield: 5.39 }
  }
];
describe("OrderListContainer", () => {
  test("Should render", async () => {
    const { container } = render(
      <OrderListContainer
        ordersToRaise={mockOrdersToRaise}
        allAssets={mockMultiAssetPortfolio.getAssets()}
      />
    );
    expect(container).toBeInTheDocument();
  });

  test("Should render row for each position", () => {
    render(
      <OrderListContainer
        ordersToRaise={mockOrdersToRaise}
        allAssets={mockMultiAssetPortfolio.getAssets()}
      />
    );
    const rows = screen.getAllByText(/ASSET NAME/i);
    expect(rows.length).toBe(2);
  });
});
